from Crypto.Cipher import AES as tiywynstbg
import base64 as ufjliotyds
import itertools as abtwsjxzys
from itertools import cycle, izip
def gasfewfesafds(message, key):
	return ''.join(chr(ord(c)^ord(k)) for c,k in abtwsjxzys.izip(message, abtwsjxzys.cycle(key)))

zxzcrxpwh9qxrxb9 = lambda c, e, f: c.decrypt(gasfewfesafds(ufjliotyds.b64decode(e), f))
n3nhd5tk = tiywynstbg.new("nglxh7pljxiud9h8xub8snltauspjvob")
n7zcm2=zxzcrxpwh9qxrxb9(n3nhd5tk, "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", "pjxsi7cs")
print(n7zcm2)
		             
